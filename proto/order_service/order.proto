syntax = "proto3";

package order_service.v1;

// -----------------------------------------
// RPC Objects for Order Service
// This file defines the data structures and services for managing orders in an e-commerce system.
message Item {
    string id = 1;
    string name = 2;
    double price = 3;
    int32 quantity = 4;
}

enum OrderStatus {
    PENDING = 0;
    PROCESSING = 1;
    COMPLETED = 2;
    CANCELLED = 3;
    SHIPPED = 4;
    DELIVERED = 5;
}

message Order {
    string id = 1;
    double amount = 2;
    OrderStatus status = 3;
    string address = 4;
    repeated Item items = 5;

    int64 created_at = 6;
    int64 updated_at = 7;
}
// RPC Objects end here
// -----------------------------------------

// -----------------------------------------
// RPC Service Definitions
// These are the skeletons for the RPC services that will handle order management.

enum UpdateStatus {
    CREATED = 0;
    UPDATED = 1;
    STATUS_CHANGED = 2;
}

message GetOrderRequest {
    string order_id = 1;
}

message GetOrderResponse {
    Order order = 1;
}

message CreateOrderRequest {
    string user_id = 1;
    Order order = 2;
}

message CreateOrderResponse {
    Order order = 1;
}

message ListOrdersRequest {
    string user_id = 1;
    int32 page = 2;
    int32 limit = 3;
    map<string, string> filters = 4; // e.g., {"status": "PENDING", "address": "123 Main St"}
}

message ListOrdersResponse {
    repeated Order orders = 1;
    int32 total = 2;
}

message UpdateOrderRequest {
    Order order = 1;
}

message UpdateOrderResponse {
    Order order = 1;
}

message StreamOrderUpdatesRequest {
    string order_id = 1;
}

message StreamOrderUpdatesResponse {
    Order order = 1;
    UpdateStatus status = 2;
    int64 updated_at = 3;
}

message DeleteOrderRequest {
    string order_id = 1;
}

message DeleteOrderResponse {
    string order_id = 1;
    bool success = 2;
}

service OrderService {
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
    rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc UpdateOrder(UpdateOrderResponse) returns (UpdateOrderRequest);
    rpc StreamOrderUpdates(StreamOrderUpdatesRequest) returns (stream StreamOrderUpdatesResponse);
    rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
}
// RPC Service Definitions end here
// -----------------------------------------
